{
  "compilerOptions": {
    // то, куда собирается сборка, но мы собираем с помощью webpack
    "outDir": "./dist/",
    // Подсвечивает все места, где не указан тип
    // Однако это не означает, что теперь вовсе нельзя использовать any.
    // Это означает лишь то, что в подобных ситуациях разработчик должен ЯВНО писать any
    "noImplicitAny": true,
    "module": "ESNext",
    // target - в какую спецификацию компилируем: для поддержки большинства браузеров
    "target": "es5",
    "jsx": "react-jsx",
    // allowJs - компилятор будет обрабатывать не только TS файлы, но и JS файлы
    "allowJs": true,
    "moduleResolution": "node",
    //    "baseUrl": ".",
    // esModuleInterop позволяет работать с пакетами, которые используют
    // common js как с обычными пакетами с помощью import (require() module.export) = common js
    // import Moment from 'moment';
    // console.log(Moment);
    // без флага esModuleInterop результат undefined
    // с флагом результат [object Object]
    "esModuleInterop": true,
    // Если какая-либо библиотека не имеет defaulr import,
    // лоадеры вроде ts-loader или babel-loader автоматически создают их вместо такого импорта
    // import * as React from 'react';
    // будет заменен на import,
    // import React from 'react';
    "allowSyntheticDefaultImports": true
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  }
}
